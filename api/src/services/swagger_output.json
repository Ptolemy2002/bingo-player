{
  "openapi": "3.1.1",
  "info": {
    "version": "1.0.0",
    "title": "Bingo Player API",
    "description": "Documentation of the Bingo Player API"
  },
  "servers": [
    {
      "url": "http://localhost:8080/"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "  Root route of the API. For API documentation, go to /api/v1/docs.  ",
        "responses": {
          "200": {
            "description": "Root route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Root route. For docs, go <a href='/api/v1/docs'>here</a>.",
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "example": "Root route. For docs, go <a href='/api/v1/docs'>here</a>.",
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not implemented.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "NOT_IMPLEMENTED",
                  "message": "This feature is not yet implemented.",
                  "help": "https://example.com/docs"
                }
              }
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "General"
        ],
        "description": "  Ping the server to ensure the API is up and running.  It should respond with a 200 response and the text \"pong\".  ",
        "responses": {
          "200": {
            "description": "Server is up and running.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "pong",
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "example": "pong",
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not implemented.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "NOT_IMPLEMENTED",
                  "message": "This feature is not yet implemented.",
                  "help": "https://example.com/docs"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spaces/get/all": {
      "get": {
        "tags": [
          "Spaces"
        ],
        "description": "Get all spaces in the database.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of spaces to return.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of spaces to skip. Default is 0.",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Spaces found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "example": true
                    },
                    "spaces": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CleanMongoSpace"
                      }
                    },
                    "help": {
                      "type": "string",
                      "example": "https://example.com/docs"
                    }
                  },
                  "required": [
                    "ok",
                    "spaces"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "example": true
                    },
                    "spaces": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CleanMongoSpace"
                      }
                    },
                    "help": {
                      "type": "string",
                      "example": "https://example.com/docs"
                    }
                  },
                  "required": [
                    "ok",
                    "spaces"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "BAD_INPUT",
                  "message": "Invalid input.",
                  "help": "https://example.com/docs"
                }
              }
            }
          },
          "404": {
            "description": "No matching spaces found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "NOT_FOUND",
                  "message": "No matching spaces found.",
                  "help": "http://example.com/docs"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not implemented.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "NOT_IMPLEMENTED",
                  "message": "This feature is not yet implemented.",
                  "help": "https://example.com/docs"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spaces/count/all": {
      "get": {
        "tags": [
          "Spaces"
        ],
        "description": "Get the number of spaces in the database.",
        "responses": {
          "200": {
            "description": "Number of spaces found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "example": true
                    },
                    "count": {
                      "type": "number",
                      "example": 42
                    },
                    "help": {
                      "type": "string",
                      "example": "https://example.com/docs"
                    }
                  },
                  "required": [
                    "ok",
                    "count"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "example": true
                    },
                    "count": {
                      "type": "number",
                      "example": 42
                    },
                    "help": {
                      "type": "string",
                      "example": "https://example.com/docs"
                    }
                  },
                  "required": [
                    "ok",
                    "count"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "BAD_INPUT",
                  "message": "Invalid input.",
                  "help": "https://example.com/docs"
                }
              }
            }
          },
          "404": {
            "description": "No matching spaces found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "NOT_FOUND",
                  "message": "No matching spaces found.",
                  "help": "http://example.com/docs"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not implemented.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "NOT_IMPLEMENTED",
                  "message": "This feature is not yet implemented.",
                  "help": "https://example.com/docs"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spaces/get/all/list/{prop}": {
      "get": {
        "tags": [
          "Spaces"
        ],
        "description": "  Get all values for a given space query prop.  The values are returned as an array of strings, but may contain null values.  ",
        "parameters": [
          {
            "name": "prop",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpaceQueryProp"
            },
            "description": "The space query prop to list.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of values found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "example": true
                    },
                    "values": {
                      "$ref": "#/components/schemas/NullableStringArray"
                    },
                    "help": {
                      "type": "string",
                      "example": "https://example.com/docs"
                    }
                  },
                  "required": [
                    "ok",
                    "values"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "example": true
                    },
                    "values": {
                      "$ref": "#/components/schemas/NullableStringArray"
                    },
                    "help": {
                      "type": "string",
                      "example": "https://example.com/docs"
                    }
                  },
                  "required": [
                    "ok",
                    "values"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "BAD_INPUT",
                  "message": "Invalid input.",
                  "help": "https://example.com/docs"
                }
              }
            }
          },
          "404": {
            "description": "No matching spaces found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "NOT_FOUND",
                  "message": "No matching spaces found.",
                  "help": "http://example.com/docs"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not implemented.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "NOT_IMPLEMENTED",
                  "message": "This feature is not yet implemented.",
                  "help": "https://example.com/docs"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spaces/get/by-prop/{prop}/{query}": {
      "get": {
        "tags": [
          "Spaces"
        ],
        "description": "  Get spaces by a given space query prop.  The spaces are returned as an array of CleanMongoSpace objects.  ",
        "parameters": [
          {
            "name": "prop",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpaceQueryPropNonId"
            },
            "description": "The space query prop to search.",
            "type": "string"
          },
          {
            "name": "query",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The query string to search for."
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of spaces to return. By default, all spaces are returned.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "l",
            "in": "query",
            "description": "Shorthand for limit.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of spaces to skip. Default is 0.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "o",
            "in": "query",
            "description": "Shorthand for offset.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "caseSensitive",
            "in": "query",
            "description": "Whether to match in a case-sensitive manner. Default is false.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "cs",
            "in": "query",
            "description": "Shorthand for caseSensitive.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "accentSensitive",
            "in": "query",
            "description": "Whether to match accents. Default is false.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "as",
            "in": "query",
            "description": "Shorthand for accentSensitive.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "matchWhole",
            "in": "query",
            "description": "Whether to match the whole string. Default is false.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "mw",
            "in": "query",
            "description": "Shorthand for matchWhole.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Spaces found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "example": true
                    },
                    "spaces": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CleanMongoSpace"
                      }
                    },
                    "help": {
                      "type": "string",
                      "example": "https://example.com/docs"
                    }
                  },
                  "required": [
                    "ok",
                    "spaces"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "example": true
                    },
                    "spaces": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CleanMongoSpace"
                      }
                    },
                    "help": {
                      "type": "string",
                      "example": "https://example.com/docs"
                    }
                  },
                  "required": [
                    "ok",
                    "spaces"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "BAD_INPUT",
                  "message": "Invalid input.",
                  "help": "https://example.com/docs"
                }
              }
            }
          },
          "404": {
            "description": "No matching spaces found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "NOT_FOUND",
                  "message": "No matching spaces found.",
                  "help": "http://example.com/docs"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not implemented.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "NOT_IMPLEMENTED",
                  "message": "This feature is not yet implemented.",
                  "help": "https://example.com/docs"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spaces/count/by-prop/{prop}/{query}": {
      "get": {
        "tags": [
          "Spaces"
        ],
        "description": "Get the number of spaces in the database matching the given query.",
        "parameters": [
          {
            "name": "prop",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpaceQueryPropNonId"
            },
            "description": "The space query prop to search.",
            "type": "string"
          },
          {
            "name": "query",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The query string to search for."
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of spaces to count. By default, all spaces are counted.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "l",
            "in": "query",
            "description": "Shorthand for limit.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of spaces to skip. Default is 0.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "o",
            "in": "query",
            "description": "Shorthand for offset.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "caseSensitive",
            "in": "query",
            "description": "Whether to match in a case-sensitive manner. Default is false.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "cs",
            "in": "query",
            "description": "Shorthand for caseSensitive.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "accentSensitive",
            "in": "query",
            "description": "Whether to match accents. Default is false.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "as",
            "in": "query",
            "description": "Shorthand for accentSensitive.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "matchWhole",
            "in": "query",
            "description": "Whether to match the whole string. Default is false.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "mw",
            "in": "query",
            "description": "Shorthand for matchWhole.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Number of spaces found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "example": true
                    },
                    "count": {
                      "type": "number",
                      "example": 42
                    },
                    "help": {
                      "type": "string",
                      "example": "https://example.com/docs"
                    }
                  },
                  "required": [
                    "ok",
                    "count"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "example": true
                    },
                    "count": {
                      "type": "number",
                      "example": 42
                    },
                    "help": {
                      "type": "string",
                      "example": "https://example.com/docs"
                    }
                  },
                  "required": [
                    "ok",
                    "count"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "BAD_INPUT",
                  "message": "Invalid input.",
                  "help": "https://example.com/docs"
                }
              }
            }
          },
          "404": {
            "description": "No matching spaces found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "NOT_FOUND",
                  "message": "No matching spaces found.",
                  "help": "http://example.com/docs"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not implemented.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "code": "NOT_IMPLEMENTED",
                  "message": "This feature is not yet implemented.",
                  "help": "https://example.com/docs"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Space": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "abc123"
          },
          "name": {
            "type": "string",
            "example": "My Space"
          },
          "description": {
            "type": "string",
            "example": "This is a space"
          },
          "examples": {
            "type": "array",
            "example": [
              "Example 1",
              "Example 2"
            ],
            "items": {
              "type": "string"
            }
          },
          "aliases": {
            "type": "array",
            "example": [
              "Alias 1",
              "Alias 2"
            ],
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "example": [
              "tag-1",
              "tag-2"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name"
        ],
        "xml": {
          "name": "Space"
        }
      },
      "CleanSpace": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "abc123"
          },
          "name": {
            "type": "string",
            "example": "My Space"
          },
          "description": {
            "type": "string",
            "example": "This is a space"
          },
          "examples": {
            "type": "array",
            "example": [
              "Example 1",
              "Example 2"
            ],
            "items": {
              "type": "string"
            }
          },
          "aliases": {
            "type": "array",
            "example": [
              "Alias 1",
              "Alias 2"
            ],
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "example": [
              "tag-1",
              "tag-2"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "examples",
          "aliases",
          "tags"
        ],
        "xml": {
          "name": "CleanSpace"
        }
      },
      "MongoSpace": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "abc123"
          },
          "name": {
            "type": "string",
            "example": "My Space"
          },
          "description": {
            "type": "string",
            "example": "This is a space"
          },
          "examples": {
            "type": "array",
            "example": [
              "Example 1",
              "Example 2"
            ],
            "items": {
              "type": "string"
            }
          },
          "aliases": {
            "type": "array",
            "example": [
              "Alias 1",
              "Alias 2"
            ],
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "example": [
              "tag-1",
              "tag-2"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "_id",
          "name"
        ],
        "xml": {
          "name": "MongoSpace"
        }
      },
      "CleanMongoSpace": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "abc123"
          },
          "name": {
            "type": "string",
            "example": "My Space"
          },
          "description": {
            "type": "string",
            "example": "This is a space"
          },
          "examples": {
            "type": "array",
            "example": [
              "Example 1",
              "Example 2"
            ],
            "items": {
              "type": "string"
            }
          },
          "aliases": {
            "type": "array",
            "example": [
              "Alias 1",
              "Alias 2"
            ],
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "example": [
              "tag-1",
              "tag-2"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "_id",
          "name",
          "description",
          "examples",
          "aliases",
          "tags"
        ],
        "xml": {
          "name": "CleanMongoSpace"
        }
      },
      "SpaceQueryProp": {
        "type": "string",
        "enum": [
          "id",
          "name",
          "description",
          "examples",
          "aliases",
          "tags",
          "_id",
          "known-as",
          "alias",
          "tag",
          "example"
        ],
        "xml": {
          "name": "SpaceQueryProp"
        }
      },
      "SpaceQueryPropNonId": {
        "type": "string",
        "enum": [
          "name",
          "description",
          "examples",
          "aliases",
          "tags",
          "known-as",
          "alias",
          "tag",
          "example"
        ],
        "xml": {
          "name": "SpaceQueryPropNonId"
        }
      },
      "ErrorCode": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "BAD_INPUT",
          "BAD_URL",
          "BAD_QUERY",
          "BAD_BODY",
          "INTERNAL",
          "NOT_FOUND",
          "NOT_IMPLEMENTED"
        ],
        "xml": {
          "name": "ErrorCode"
        }
      },
      "NullableStringArray": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "required": true,
            "enum": [
              false
            ]
          },
          "code": {
            "type": "string",
            "required": true,
            "enum": [
              "UNKNOWN",
              "BAD_INPUT",
              "BAD_URL",
              "BAD_QUERY",
              "BAD_BODY",
              "INTERNAL",
              "NOT_FOUND",
              "NOT_IMPLEMENTED"
            ]
          },
          "message": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ],
            "required": true
          },
          "help": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "required": false
          }
        }
      }
    }
  }
}